name: CD
on:
  push:
    branches: [main]
jobs:
  deploy:
    runs-on: ubuntu-latest

    env:
      SSHPASS: ${{ secrets.APP_PASS }}
    
    steps:
      # —— Setup Github actions 🐙 —————————————————————————————————————————————
      - uses: actions/checkout@v2

      - name:  APT UPDATE and INSTALL SSHPASS
        run:
            sudo apt update && sudo apt install sshpass

      - name: Setup PHP, extensions and composer with shivammathur/setup-php
        uses: shivammathur/setup-php@2.14.0
        with:
          php-version: '7.4'
          extensions:  mbstring, xml, ctype, iconv, intl, pdo, pdo_mysql, dom, filter, gd, iconv, json, mbstring, pdo
          tools: phpunit, symfony, symfony-cli

      # —— Composer 🧙‍️ —————————————————————————————————————————————————————————
      - name: Validate composer.json and composer.lock
        run: composer validate

      - name: Get composer cache directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: Cache composer dependencies
        uses: actions/cache@v1
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Install Composer dependencies
        run: composer install

      ## —— Npm 🐱 ————————————————————————————————————————————————————————————
      - name: NPM install
        uses: actions/setup-node@v2
        with:
          node-version: '12'
          registry-url: npm.fontawesome.com
      - run: npm install
        env:
          NODE_AUTH_TOKEN: ${{ secrets.FONTAWESOME_NPM_AUTH_TOKEN }}

      - name: NPM build
        run: npm run build

      # —— Symfony 🎵 ——————————————————————————————————————————————————————————
      - name: Check Symfony requirements
        run: symfony check:requirements

      - name: Check the Symfony console
        run: |
          bin/console about

      # —— Coding standards ✨ —————————————————————————————————————————————————
      - name: Coding standards checks (php_codesniffer + php-cs-fixer)
        run: make cs
        if: matrix.php-versions == '7.4'
      
      # —— Tests ✅ ————————————————————————————————————————————————————————————
      - name: UNIT TESTS
        run:
          bin/phpunit --testdox

      # —— Deploy ——————————————————————————————————————————————————————————————
      - name: deploy
        run: 
          sshpass -e ssh -o stricthostkeychecking=no ${{ secrets.APP_USER }}@${{secrets.APP_HOST}}
          "cd /var/www/contact-form &&
          git pull &&
          composer install
          npm install
          npm run build"